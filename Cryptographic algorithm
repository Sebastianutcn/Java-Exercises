/*
10. Assume that there is a cryptographic algorithm which takes an input text ‘A’ composed of lower and upper case
characters. Separately a character string ‘B’ is defined. Each character from B has an associated random integer
value between 1 and 100. The algorithm checks if the letters from B are found in A and adds the associated
numerical values. To the final sum value, the algorithm also adds the positions from string A where characters
from string B were found. If the final sum is larger than 100, the encryption was valid. Display a message with
the result.
Example:
String A = ”aTmPpDsst”
String B =”ams”
Associated numerical values for string B: 11 33 7
Sum: (11+33+7+7)+(1+3+7+8)=77 -> INVALID ENCRYPTION
*/



import java.util.Random;
import java.util.Scanner;

public class Lab2 {

	public static void main(String[] args)  {
		
		String A=new String();
		String B=new String();
		
		Scanner in = new Scanner(System.in);
		
		System.out.print("Dati sirul A: ");
		A=in.next();
		
		System.out.print("Dati sirul B: ");
		B=in.next();
		
		int[] tab=new int[B.length()];
		
		Random random=new Random();
		
		System.out.print("Valorile asociate elementelor din sirul B: ");
		for(int i=0; i<B.length(); i++) {
			tab[i]=random.nextInt(100)+1;
			System.out.print(" " + tab[i]);
		}
		
		int sum1=0;
		for(int i=0; i<A.length(); i++) {
			for(int j=0; j<B.length(); j++) {
				if(A.charAt(i)==B.charAt(j)) {
					sum1+=tab[j];
				}
			}
		}
		
		int[] index=new int[A.length()];
		int k=0;
		int sum2=0;
		for(int i=0; i<A.length(); i++) {
			for(int j=0; j<B.length(); j++) {
				if(A.charAt(i)==B.charAt(j)) {
					index[k]=i;
					sum2+=index[k];
					k++;
				}
			}
		}
		
		int rez=sum1+sum2;
		System.out.println("\nRezultat: " + rez);
		
		if(rez>100) {
			System.out.println("\t Criptare Validata");
		}
		else {
			System.out.println("\t Criptare Nevalidata");
		}
		
	}		
}
